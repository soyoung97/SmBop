[{"db_id": "election", "query": "SELECT avg(Population) FROM county", "query_toks": ["SELECT", "avg", "(", "Population", ")", "FROM", "county"], "query_toks_no_value": ["select", "avg", "(", "population", ")", "from", "county"], "question": "On average how large is the population of the counties?", "question_toks": ["On", "average", "how", "large", "is", "the", "population", "of", "the", "counties", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations", "query_toks": ["SELECT", "location_code", ",", "date_in_location_from", ",", "date_in_locaton_to", "FROM", "Document_locations"], "query_toks_no_value": ["select", "location_code", ",", "date_in_location_from", ",", "date_in_locaton_to", "from", "document_locations"], "question": "Show the location code, the starting date and ending data in that location for all the documents.", "question_toks": ["Show", "the", "location", "code", ",", "the", "starting", "date", "and", "ending", "data", "in", "that", "location", "for", "all", "the", "documents", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]], [0, [0, [0, 26, false], null]], [0, [0, [0, 27, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "insurance_policies", "query": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1", "query_toks": ["SELECT", "Amount_Settled", ",", "Amount_Claimed", "FROM", "Claims", "ORDER", "BY", "Amount_Settled", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "amount_settled", ",", "amount_claimed", "from", "claims", "order", "by", "amount_settled", "asc", "limit", "value"], "question": "Among all the claims, what is the amount claimed in the claim with the least amount settled? List both the settlement amount and claim amount.", "question_toks": ["Among", "all", "the", "claims", ",", "what", "is", "the", "amount", "claimed", "in", "the", "claim", "with", "the", "least", "amount", "settled", "?", "List", "both", "the", "settlement", "amount", "and", "claim", "amount", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "loan_1", "query": "SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type  =  'saving'", "query_toks": ["SELECT", "cust_name", "FROM", "customer", "EXCEPT", "SELECT", "cust_name", "FROM", "customer", "WHERE", "acc_type", "=", "'saving", "'"], "query_toks_no_value": ["select", "cust_name", "from", "customer", "except", "select", "cust_name", "from", "customer", "where", "acc_type", "=", "value"], "question": "What are the names of customers who do not have saving accounts?", "question_toks": ["What", "are", "the", "names", "of", "customers", "who", "do", "not", "have", "saving", "accounts", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"saving\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, {"db_id": "machine_repair", "query": "SELECT Name FROM technician WHERE Team != \"NYY\"", "query_toks": ["SELECT", "Name", "FROM", "technician", "WHERE", "Team", "!", "=", "``", "NYY", "''"], "query_toks_no_value": ["select", "name", "from", "technician", "where", "team", "!", "=", "value"], "question": "What is the name of the technician whose team is not 'NYY'?", "question_toks": ["What", "is", "the", "name", "of", "the", "technician", "whose", "team", "is", "not", "'NYY", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 7, [0, [0, 14, false], null], "\"NYY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "e_learning", "query": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment", "query_toks": ["SELECT", "count", "(", "DISTINCT", "student_id", ")", "FROM", "Student_Course_Enrolment"], "query_toks_no_value": ["select", "count", "(", "distinct", "student_id", ")", "from", "student_course_enrolment"], "question": "Find the number of distinct students enrolled in courses.", "question_toks": ["Find", "the", "number", "of", "distinct", "students", "enrolled", "in", "courses", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 26, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "flight_4", "query": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", "FROM", "airlines", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.alid", "=", "T2.alid", "GROUP", "BY", "T1.name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "airlines", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "alid", "=", "t2", ".", "alid", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name of airline which runs the most number of routes.", "question_toks": ["Find", "the", "name", "of", "airline", "which", "runs", "the", "most", "number", "of", "routes", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "student_assessment", "query": "SELECT first_name FROM people ORDER BY first_name", "query_toks": ["SELECT", "first_name", "FROM", "people", "ORDER", "BY", "first_name"], "query_toks_no_value": ["select", "first_name", "from", "people", "order", "by", "first_name"], "question": "What are the first names of the people in alphabetical order?", "question_toks": ["What", "are", "the", "first", "names", "of", "the", "people", "in", "alphabetical", "order", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "formula_1", "query": "SELECT count(*) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = \"Australian Grand Prix\" AND YEAR = 2009", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "results", "AS", "T1", "JOIN", "races", "AS", "T2", "ON", "T1.raceid", "=", "T2.raceid", "WHERE", "T2.name", "=", "``", "Australian", "Grand", "Prix", "''", "AND", "YEAR", "=", "2009"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "results", "as", "t1", "join", "races", "as", "t2", "on", "t1", ".", "raceid", "=", "t2", ".", "raceid", "where", "t2", ".", "name", "=", "value", "and", "year", "=", "value"], "question": "How many drivers participated in the race Australian Grand Prix held in 2009?", "question_toks": ["How", "many", "drivers", "participated", "in", "the", "race", "Australian", "Grand", "Prix", "held", "in", "2009", "?"], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 44, false], null], [0, 10, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"Australian Grand Prix\"", null], "and", [false, 2, [0, [0, 11, false], null], 2009.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "theme_gallery", "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", ",", "T2.country", "FROM", "exhibition", "AS", "T1", "JOIN", "artist", "AS", "T2", "ON", "T1.artist_id", "=", "T2.artist_id", "GROUP", "BY", "T1.artist_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "country", "from", "exhibition", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "group", "by", "t1", ".", "artist_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the name and country corresponding to the artist who has had the most exhibitions.", "question_toks": ["Return", "the", "name", "and", "country", "corresponding", "to", "the", "artist", "who", "has", "had", "the", "most", "exhibitions", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "dorm_1", "query": "SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student", "query_toks": ["SELECT", "count", "(", "DISTINCT", "major", ")", ",", "count", "(", "DISTINCT", "city_code", ")", "FROM", "student"], "query_toks_no_value": ["select", "count", "(", "distinct", "major", ")", ",", "count", "(", "distinct", "city_code", ")", "from", "student"], "question": "How many different majors are there and how many different city codes are there for each student?", "question_toks": ["How", "many", "different", "majors", "are", "there", "and", "how", "many", "different", "city", "codes", "are", "there", "for", "each", "student", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 6, true], null]], [3, [0, [0, 8, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Documents", "WHERE", "document_id", "NOT", "IN", "(", "SELECT", "document_id", "FROM", "Documents_with_expenses", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "documents", "where", "document_id", "not", "in", "(", "select", "document_id", "from", "documents_with_expenses", ")"], "question": "How many documents do not have any expense?", "question_toks": ["How", "many", "documents", "do", "not", "have", "any", "expense", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "e_learning", "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  \"Pass\"", "query_toks": ["SELECT", "date_test_taken", "FROM", "Student_Tests_Taken", "WHERE", "test_result", "=", "``", "Pass", "''"], "query_toks_no_value": ["select", "date_test_taken", "from", "student_tests_taken", "where", "test_result", "=", "value"], "question": "Find the dates of the tests taken with result \"Pass\".", "question_toks": ["Find", "the", "dates", "of", "the", "tests", "taken", "with", "result", "``", "Pass", "''", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 31, false], null]]]], "where": [[false, 2, [0, [0, 32, false], null], "\"Pass\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "entrepreneur", "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != \"Rachel Elnaugh\"", "query_toks": ["SELECT", "T2.Name", "FROM", "entrepreneur", "AS", "T1", "JOIN", "people", "AS", "T2", "ON", "T1.People_ID", "=", "T2.People_ID", "WHERE", "T1.Investor", "!", "=", "``", "Rachel", "Elnaugh", "''"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "entrepreneur", "as", "t1", "join", "people", "as", "t2", "on", "t1", ".", "people_id", "=", "t2", ".", "people_id", "where", "t1", ".", "investor", "!", "=", "value"], "question": "Return the names of entrepreneurs do no not have the investor Rachel Elnaugh.", "question_toks": ["Return", "the", "names", "of", "entrepreneurs", "do", "no", "not", "have", "the", "investor", "Rachel", "Elnaugh", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"Rachel Elnaugh\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "protein_institute", "query": "SELECT count(*) FROM institution WHERE institution_id NOT IN (SELECT institution_id FROM protein)", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "institution", "WHERE", "institution_id", "NOT", "IN", "(", "SELECT", "institution_id", "FROM", "protein", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "institution", "where", "institution_id", "not", "in", "(", "select", "institution_id", "from", "protein", ")"], "question": "How many institutions do not have an associated protein in our record?", "question_toks": ["How", "many", "institutions", "do", "not", "have", "an", "associated", "protein", "in", "our", "record", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "network_1", "query": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"", "query_toks": ["SELECT", "ID", "FROM", "Highschooler", "WHERE", "name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "id", "from", "highschooler", "where", "name", "=", "value"], "question": "What is Kyle's id?", "question_toks": ["What", "is", "Kyle", "'s", "id", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "gas_company", "query": "SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "manager_name", "FROM", "gas_station", "WHERE", "open_year", ">", "2000", "GROUP", "BY", "manager_name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "manager_name", "from", "gas_station", "where", "open_year", ">", "value", "group", "by", "manager_name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the manager with the most gas stations that opened after 2000?", "question_toks": ["What", "is", "the", "name", "of", "the", "manager", "with", "the", "most", "gas", "stations", "that", "opened", "after", "2000", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 2000.0, null]], "groupBy": [[0, 13, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "activity_1", "query": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in", "query_toks": ["SELECT", "FacID", "FROM", "Faculty", "EXCEPT", "SELECT", "FacID", "FROM", "Faculty_participates_in"], "query_toks_no_value": ["select", "facid", "from", "faculty", "except", "select", "facid", "from", "faculty_participates_in"], "question": "Which faculty do not participate in any activity? Find their faculty ids.", "question_toks": ["Which", "faculty", "do", "not", "participate", "in", "any", "activity", "?", "Find", "their", "faculty", "ids", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, {"db_id": "cre_Theme_park", "query": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "How_to_Get_There", "FROM", "Tourist_Attractions", "GROUP", "BY", "How_to_Get_There", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "how_to_get_there", "from", "tourist_attractions", "group", "by", "how_to_get_there", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which transportation method is used the most often to get to tourist attractions?", "question_toks": ["Which", "transportation", "method", "is", "used", "the", "most", "often", "to", "get", "to", "tourist", "attractions", "?"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 21, false], null]]]], "where": [], "groupBy": [[0, 21, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "battle_death", "query": "SELECT name ,  tonnage FROM ship ORDER BY name DESC", "query_toks": ["SELECT", "name", ",", "tonnage", "FROM", "ship", "ORDER", "BY", "name", "DESC"], "query_toks_no_value": ["select", "name", ",", "tonnage", "from", "ship", "order", "by", "name", "desc"], "question": "List the name and tonnage ordered by in descending alphaetical order for the names.", "question_toks": ["List", "the", "name", "and", "tonnage", "ordered", "by", "in", "descending", "alphaetical", "order", "for", "the", "names", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "wine_1", "query": "SELECT Price FROM WINE WHERE YEAR  <  2010", "query_toks": ["SELECT", "Price", "FROM", "WINE", "WHERE", "YEAR", "<", "2010"], "query_toks_no_value": ["select", "price", "from", "wine", "where", "year", "<", "value"], "question": "What are the prices of wines produced before the year of 2010?", "question_toks": ["What", "are", "the", "prices", "of", "wines", "produced", "before", "the", "year", "of", "2010", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 4, [0, [0, 16, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "products_gen_characteristics", "query": "SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"yellow\"", "query_toks": ["SELECT", "t1.product_name", ",", "t1.typical_buying_price", ",", "t1.typical_selling_price", "FROM", "products", "AS", "t1", "JOIN", "ref_colors", "AS", "t2", "ON", "t1.color_code", "=", "t2.color_code", "WHERE", "t2.color_description", "=", "``", "yellow", "''"], "query_toks_no_value": ["select", "t1", ".", "product_name", ",", "t1", ".", "typical_buying_price", ",", "t1", ".", "typical_selling_price", "from", "products", "as", "t1", "join", "ref_colors", "as", "t2", "on", "t1", ".", "color_code", "=", "t2", ".", "color_code", "where", "t2", ".", "color_description", "=", "value"], "question": "Return the names and typical buying and selling prices for products that have 'yellow' as their color description.", "question_toks": ["Return", "the", "names", "and", "typical", "buying", "and", "selling", "prices", "for", "products", "that", "have", "'yellow", "'", "as", "their", "color", "description", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]], [0, [0, [0, 18, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"yellow\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "film_rank", "query": "SELECT count(*) FROM film", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "film"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "film"], "question": "Count the number of films.", "question_toks": ["Count", "the", "number", "of", "films", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%'", "query_toks": ["SELECT", "T1.document_id", "FROM", "Documents", "AS", "T1", "JOIN", "Documents_with_expenses", "AS", "T2", "ON", "T1.document_id", "=", "T2.document_id", "WHERE", "T1.document_name", "LIKE", "'", "%", "s", "%", "'"], "query_toks_no_value": ["select", "t1", ".", "document_id", "from", "documents", "as", "t1", "join", "documents_with_expenses", "as", "t2", "on", "t1", ".", "document_id", "=", "t2", ".", "document_id", "where", "t1", ".", "document_name", "like", "value"], "question": "What are the ids of documents with letter 's' in the name with any expense budgets.", "question_toks": ["What", "are", "the", "ids", "of", "documents", "with", "letter", "'s", "'", "in", "the", "name", "with", "any", "expense", "budgets", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 5]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 9, [0, [0, 12, false], null], "\"%s%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "department_management", "query": "SELECT born_state FROM head GROUP BY born_state HAVING count(*)  >=  3", "query_toks": ["SELECT", "born_state", "FROM", "head", "GROUP", "BY", "born_state", "HAVING", "count", "(", "*", ")", ">", "=", "3"], "query_toks_no_value": ["select", "born_state", "from", "head", "group", "by", "born_state", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the names of the states where at least 3 heads were born?", "question_toks": ["What", "are", "the", "names", "of", "the", "states", "where", "at", "least", "3", "heads", "were", "born", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [[false, 5, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "soccer_2", "query": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie')", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "(", "SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.pPos", "=", "'mid", "'", "EXCEPT", "SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.pPos", "=", "'goalie", "'", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "(", "select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "ppos", "=", "value", "except", "select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "ppos", "=", "value", ")"], "question": "What is the count of states with college students playing in the mid position but not as goalies?", "question_toks": ["What", "is", "the", "count", "of", "states", "with", "college", "students", "playing", "in", "the", "mid", "position", "but", "not", "as", "goalies", "?"], "sql": {"from": {"table_units": [["sql", {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"mid\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"goalie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "race_track", "query": "SELECT DISTINCT CLASS FROM race", "query_toks": ["SELECT", "DISTINCT", "CLASS", "FROM", "race"], "query_toks_no_value": ["select", "distinct", "class", "from", "race"], "question": "What are the distinct classes that races can have?", "question_toks": ["What", "are", "the", "distinct", "classes", "that", "races", "can", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "behavior_monitoring", "query": "SELECT T1.date_incident_start ,  date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.last_name  =  \"Fahey\"", "query_toks": ["SELECT", "T1.date_incident_start", ",", "date_incident_end", "FROM", "Behavior_Incident", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "WHERE", "T2.last_name", "=", "``", "Fahey", "''"], "query_toks_no_value": ["select", "t1", ".", "date_incident_start", ",", "date_incident_end", "from", "behavior_incident", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "last_name", "=", "value"], "question": "Find the start and end dates of behavior incidents of students with last name \"Fahey\".", "question_toks": ["Find", "the", "start", "and", "end", "dates", "of", "behavior", "incidents", "of", "students", "with", "last", "name", "``", "Fahey", "''", "."], "sql": {"from": {"table_units": [["table_unit", 7], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 43, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 44, false], null]], [0, [0, [0, 45, false], null]]]], "where": [[false, 2, [0, [0, 20, false], null], "\"Fahey\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "election", "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.Party", "FROM", "election", "AS", "T1", "JOIN", "party", "AS", "T2", "ON", "T1.Party", "=", "T2.Party_ID", "GROUP", "BY", "T1.Party", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "party", "from", "election", "as", "t1", "join", "party", "as", "t2", "on", "t1", ".", "party", "=", "t2", ".", "party_id", "group", "by", "t1", ".", "party", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which party has the largest number of delegates?", "question_toks": ["Which", "party", "has", "the", "largest", "number", "of", "delegates", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 17, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 17, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "ship_1", "query": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')", "query_toks": ["SELECT", "name", ",", "flag", "FROM", "ship", "WHERE", "ship_id", "NOT", "IN", "(", "SELECT", "ship_id", "FROM", "captain", "WHERE", "rank", "=", "'Midshipman", "'", ")"], "query_toks_no_value": ["select", "name", ",", "flag", "from", "ship", "where", "ship_id", "not", "in", "(", "select", "ship_id", "from", "captain", "where", "rank", "=", "value", ")"], "question": "What are the names and flags of ships that do not have a captain with the rank of Midshipman?", "question_toks": ["What", "are", "the", "names", "and", "flags", "of", "ships", "that", "do", "not", "have", "a", "captain", "with", "the", "rank", "of", "Midshipman", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Midshipman\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "railway", "query": "SELECT max(LEVEL) FROM manager WHERE Country != \"Australia\t\"", "query_toks": ["SELECT", "max", "(", "LEVEL", ")", "FROM", "manager", "WHERE", "Country", "!", "=", "``", "Australia", "''"], "query_toks_no_value": ["select", "max", "(", "level", ")", "from", "manager", "where", "country", "!", "=", "value"], "question": "What is the maximum level of managers in countries that are not \"Australia\"?", "question_toks": ["What", "is", "the", "maximum", "level", "of", "managers", "in", "countries", "that", "are", "not", "``", "Australia", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 19, false], null]]]], "where": [[false, 7, [0, [0, 16, false], null], "\"Australia\t\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dog_kennels", "query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1", "query_toks": ["SELECT", "T1.treatment_type_description", "FROM", "Treatment_types", "AS", "T1", "JOIN", "Treatments", "AS", "T2", "ON", "T1.treatment_type_code", "=", "T2.treatment_type_code", "GROUP", "BY", "T1.treatment_type_code", "ORDER", "BY", "sum", "(", "cost_of_treatment", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "treatment_type_description", "from", "treatment_types", "as", "t1", "join", "treatments", "as", "t2", "on", "t1", ".", "treatment_type_code", "=", "t2", ".", "treatment_type_code", "group", "by", "t1", ".", "treatment_type_code", "order", "by", "sum", "(", "cost_of_treatment", ")", "asc", "limit", "value"], "question": "What is the description of the treatment type that costs the least money in total?", "question_toks": ["What", "is", "the", "description", "of", "the", "treatment", "type", "that", "costs", "the", "least", "money", "in", "total", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 7]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 47, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": ["asc", [[0, [4, 49, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "activity_1", "query": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "rank", "FROM", "Faculty", "GROUP", "BY", "rank", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "rank", "from", "faculty", "group", "by", "rank", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Find the faculty rank that has the least members.", "question_toks": ["Find", "the", "faculty", "rank", "that", "has", "the", "least", "members", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "customers_and_addresses", "query": "SELECT country FROM addresses GROUP BY country HAVING count(address_id)  >  4", "query_toks": ["SELECT", "country", "FROM", "addresses", "GROUP", "BY", "country", "HAVING", "count", "(", "address_id", ")", ">", "4"], "query_toks_no_value": ["select", "country", "from", "addresses", "group", "by", "country", "having", "count", "(", "address_id", ")", ">", "value"], "question": "List the countries having more than 4 addresses listed.", "question_toks": ["List", "the", "countries", "having", "more", "than", "4", "addresses", "listed", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [[false, 3, [0, [3, 1, false], null], 4.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "e_learning", "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  \"Karson\"", "query_toks": ["SELECT", "T1.date_of_enrolment", ",", "T1.date_of_completion", "FROM", "Student_Course_Enrolment", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "WHERE", "T2.personal_name", "=", "``", "Karson", "''"], "query_toks_no_value": ["select", "t1", ".", "date_of_enrolment", ",", "t1", ".", "date_of_completion", "from", "student_course_enrolment", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "where", "t2", ".", "personal_name", "=", "value"], "question": "List the dates of enrollment and completion of the student with personal name \"Karson\".", "question_toks": ["List", "the", "dates", "of", "enrollment", "and", "completion", "of", "the", "student", "with", "personal", "name", "``", "Karson", "''", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 28, false], null]], [0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Karson\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "store_product", "query": "SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "max_page_size", "FROM", "product", "GROUP", "BY", "max_page_size", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "max_page_size", "from", "product", "group", "by", "max_page_size", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the most prominent max page size among all the products.", "question_toks": ["Find", "the", "most", "prominent", "max", "page", "size", "among", "all", "the", "products", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "customers_card_transactions", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  \"4560596484842\"", "query_toks": ["SELECT", "T2.customer_first_name", ",", "T2.customer_last_name", ",", "T2.customer_phone", "FROM", "Customers_cards", "AS", "T1", "JOIN", "Customers", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "WHERE", "T1.card_number", "=", "``", "4560596484842", "''"], "query_toks_no_value": ["select", "t2", ".", "customer_first_name", ",", "t2", ".", "customer_last_name", ",", "t2", ".", "customer_phone", "from", "customers_cards", "as", "t1", "join", "customers", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "where", "t1", ".", "card_number", "=", "value"], "question": "Return the full name and phone of the customer who has card number 4560596484842.", "question_toks": ["Return", "the", "full", "name", "and", "phone", "of", "the", "customer", "who", "has", "card", "number", "4560596484842", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"4560596484842\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "store_1", "query": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state;", "query_toks": ["SELECT", "billing_state", ",", "COUNT", "(", "*", ")", "FROM", "invoices", "WHERE", "billing_country", "=", "``", "USA", "''", "GROUP", "BY", "billing_state", ";"], "query_toks_no_value": ["select", "billing_state", ",", "count", "(", "*", ")", "from", "invoices", "where", "billing_country", "=", "value", "group", "by", "billing_state"], "question": "List the number of invoices from the US, grouped by state.", "question_toks": ["List", "the", "number", "of", "invoices", "from", "the", "US", ",", "grouped", "by", "state", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 43, false], null]], [3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 44, false], null], "\"USA\"", null]], "groupBy": [[0, 43, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "customer_complaints", "query": "SELECT town_city FROM customers WHERE customer_type_code  =  \"Good Credit Rating\" GROUP BY town_city ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "town_city", "FROM", "customers", "WHERE", "customer_type_code", "=", "``", "Good", "Credit", "Rating", "''", "GROUP", "BY", "town_city", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "town_city", "from", "customers", "where", "customer_type_code", "=", "value", "group", "by", "town_city", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "Return the city with the customer type code \"Good Credit Rating\" that had the fewest customers.", "question_toks": ["Return", "the", "city", "with", "the", "customer", "type", "code", "``", "Good", "Credit", "Rating", "''", "that", "had", "the", "fewest", "customers", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], "\"Good Credit Rating\"", null]], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Tracking_DB", "query": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"Marry CV\"", "query_toks": ["SELECT", "date_stored", "FROM", "All_documents", "WHERE", "Document_name", "=", "``", "Marry", "CV", "''"], "query_toks_no_value": ["select", "date_stored", "from", "all_documents", "where", "document_name", "=", "value"], "question": "What is the date when the document \"Marry CV\" was stored?", "question_toks": ["What", "is", "the", "date", "when", "the", "document", "``", "Marry", "CV", "''", "was", "stored", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Marry CV\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "activity_1", "query": "SELECT activity_name FROM Activity", "query_toks": ["SELECT", "activity_name", "FROM", "Activity"], "query_toks_no_value": ["select", "activity_name", "from", "activity"], "question": "List all the activities we have.", "question_toks": ["List", "all", "the", "activities", "we", "have", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "small_bank_1", "query": "SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance", "query_toks": ["SELECT", "T1.name", ",", "T3.balance", "+", "T2.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "WHERE", "T3.balance", "<", "T2.balance"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t3", ".", "balance", "+", "t2", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "where", "t3", ".", "balance", "<", "t2", ".", "balance"], "question": "What are the names of customers who have a savings balance lower than their checking balance, and what is the total of their checking and savings balances?", "question_toks": ["What", "are", "the", "names", "of", "customers", "who", "have", "a", "savings", "balance", "lower", "than", "their", "checking", "balance", ",", "and", "what", "is", "the", "total", "of", "their", "checking", "and", "savings", "balances", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [2, [0, 4, false], [0, 6, false]]]]], "where": [[false, 4, [0, [0, 4, false], null], [0, 6, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "soccer_2", "query": "SELECT sum(enr) FROM College", "query_toks": ["SELECT", "sum", "(", "enr", ")", "FROM", "College"], "query_toks_no_value": ["select", "sum", "(", "enr", ")", "from", "college"], "question": "How many students are enrolled in college?", "question_toks": ["How", "many", "students", "are", "enrolled", "in", "college", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[4, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "college_2", "query": "SELECT count(*) FROM classroom WHERE building != 'Lamberton'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "classroom", "WHERE", "building", "!", "=", "'Lamberton", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "classroom", "where", "building", "!", "=", "value"], "question": "How many classrooms are not in Lamberton?", "question_toks": ["How", "many", "classrooms", "are", "not", "in", "Lamberton", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 7, [0, [0, 1, false], null], "\"Lamberton\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dorm_1", "query": "SELECT count(*) FROM dorm_amenity", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "dorm_amenity"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "dorm_amenity"], "question": "How many diffrent dorm amenities are there?", "question_toks": ["How", "many", "diffrent", "dorm", "amenities", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "city_record", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city", "query_toks": ["SELECT", "T1.city", "FROM", "city", "AS", "T1", "JOIN", "temperature", "AS", "T2", "ON", "T1.city_id", "=", "T2.city_id", "WHERE", "T2.Mar", "<", "T2.Jul", "INTERSECT", "SELECT", "T3.city", "FROM", "city", "AS", "T3", "JOIN", "hosting_city", "AS", "T4", "ON", "T3.city_id", "=", "T4.host_city"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "city", "as", "t1", "join", "temperature", "as", "t2", "on", "t1", ".", "city_id", "=", "t2", ".", "city_id", "where", "t2", ".", "mar", "<", "t2", ".", "jul", "intersect", "select", "t3", ".", "city", "from", "city", "as", "t3", "join", "hosting_city", "as", "t4", "on", "t3", ".", "city_id", "=", "t4", ".", "host_city"], "question": "Which cities have lower temperature in March than in July and have been once host cities?", "question_toks": ["Which", "cities", "have", "lower", "temperature", "in", "March", "than", "in", "July", "and", "have", "been", "once", "host", "cities", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 16, false], null], [0, 19, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 27, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, {"db_id": "e_government", "query": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\"", "query_toks": ["SELECT", "payment_method_code", ",", "party_phone", "FROM", "parties", "WHERE", "party_email", "=", "``", "enrico09", "@", "example.com", "''"], "query_toks_no_value": ["select", "payment_method_code", ",", "party_phone", "from", "parties", "where", "party_email", "=", "value"], "question": "What is the payment method code and party phone of the party with the email 'enrico09@example.com'?", "question_toks": ["What", "is", "the", "payment", "method", "code", "and", "party", "phone", "of", "the", "party", "with", "the", "email", "'enrico09", "@", "example.com", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]], [0, [0, [0, 30, false], null]]]], "where": [[false, 2, [0, [0, 31, false], null], "\"enrico09@example.com\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "hr_1", "query": "SELECT country_id ,  COUNT(*) FROM locations GROUP BY country_id", "query_toks": ["SELECT", "country_id", ",", "COUNT", "(", "*", ")", "FROM", "locations", "GROUP", "BY", "country_id"], "query_toks_no_value": ["select", "country_id", ",", "count", "(", "*", ")", "from", "locations", "group", "by", "country_id"], "question": "display the country ID and number of cities for each country.", "question_toks": ["display", "the", "country", "ID", "and", "number", "of", "cities", "for", "each", "country", "."], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 35, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 35, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "performance_attendance", "query": "SELECT count(*) FROM performance", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "performance"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "performance"], "question": "How many performances are there?", "question_toks": ["How", "many", "performances", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Theme_park", "query": "SELECT avg(price_range) FROM HOTELS WHERE star_rating_code  =  \"5\" AND pets_allowed_yn  =  1", "query_toks": ["SELECT", "avg", "(", "price_range", ")", "FROM", "HOTELS", "WHERE", "star_rating_code", "=", "``", "5", "''", "AND", "pets_allowed_yn", "=", "1"], "query_toks_no_value": ["select", "avg", "(", "price_range", ")", "from", "hotels", "where", "star_rating_code", "=", "value", "and", "pets_allowed_yn", "=", "value"], "question": "Show the average price range of hotels that have 5 star ratings and allow pets.", "question_toks": ["Show", "the", "average", "price", "range", "of", "hotels", "that", "have", "5", "star", "ratings", "and", "allow", "pets", "."], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[5, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"5\"", null], "and", [false, 2, [0, [0, 15, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "storm_record", "query": "SELECT region_name FROM region ORDER BY region_name", "query_toks": ["SELECT", "region_name", "FROM", "region", "ORDER", "BY", "region_name"], "query_toks_no_value": ["select", "region_name", "from", "region", "order", "by", "region_name"], "question": "List all region names in alphabetical order.", "question_toks": ["List", "all", "region", "names", "in", "alphabetical", "order", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "flight_company", "query": "SELECT id ,  country ,  city ,  name FROM airport ORDER BY name", "query_toks": ["SELECT", "id", ",", "country", ",", "city", ",", "name", "FROM", "airport", "ORDER", "BY", "name"], "query_toks_no_value": ["select", "id", ",", "country", ",", "city", ",", "name", "from", "airport", "order", "by", "name"], "question": "List the id, country, city and name of the airports ordered alphabetically by the name.", "question_toks": ["List", "the", "id", ",", "country", ",", "city", "and", "name", "of", "the", "airports", "ordered", "alphabetically", "by", "the", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000", "query_toks": ["select", "sum", "(", "population", ")", ",", "avg", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "\"north america\"", "and", "surfacearea", ">", "3000"], "query_toks_no_value": ["select", "sum", "(", "population", ")", ",", "avg", "(", "surfacearea", ")", "from", "country", "where", "continent", "=", "value", "and", "surfacearea", ">", "value"], "question": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?", "question_toks": ["What", "is", "the", "total", "population", "and", "average", "area", "of", "countries", "in", "the", "continent", "of", "North", "America", "whose", "area", "is", "bigger", "than", "3000", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[4, [0, [0, 14, false], null]], [5, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"north america\"", null], "and", [false, 3, [0, [0, 12, false], null], 3000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "college_3", "query": "SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1", "query_toks": ["SELECT", "Rank", "FROM", "FACULTY", "GROUP", "BY", "Rank", "ORDER", "BY", "count", "(", "*", ")", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "rank", "from", "faculty", "group", "by", "rank", "order", "by", "count", "(", "*", ")", "asc", "limit", "value"], "question": "Find the rank of the faculty that the fewest faculties belong to.", "question_toks": ["Find", "the", "rank", "of", "the", "faculty", "that", "the", "fewest", "faculties", "belong", "to", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "club_1", "query": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.major  =  \"600\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t1.clubname", "FROM", "club", "AS", "t1", "JOIN", "member_of_club", "AS", "t2", "ON", "t1.clubid", "=", "t2.clubid", "JOIN", "student", "AS", "t3", "ON", "t2.stuid", "=", "t3.stuid", "WHERE", "t3.major", "=", "``", "600", "''", "GROUP", "BY", "t1.clubname", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "clubname", "from", "club", "as", "t1", "join", "member_of_club", "as", "t2", "on", "t1", ".", "clubid", "=", "t2", ".", "clubid", "join", "student", "as", "t3", "on", "t2", ".", "stuid", "=", "t3", ".", "stuid", "where", "t3", ".", "major", "=", "value", "group", "by", "t1", ".", "clubname", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which club has the most members majoring in \"600\"?", "question_toks": ["Which", "club", "has", "the", "most", "members", "majoring", "in", "``", "600", "''", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"600\"", null]], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "culture_company", "query": "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "publisher", "FROM", "book_club", "GROUP", "BY", "publisher", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "publisher", "from", "book_club", "group", "by", "publisher", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Return the publisher that has published the most books.", "question_toks": ["Return", "the", "publisher", "that", "has", "published", "the", "most", "books", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"", "query_toks": ["SELECT", "Code", "FROM", "country", "WHERE", "GovernmentForm", "!", "=", "``", "Republic", "''", "EXCEPT", "SELECT", "CountryCode", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "=", "``", "English", "''"], "query_toks_no_value": ["select", "code", "from", "country", "where", "governmentform", "!", "=", "value", "except", "select", "countrycode", "from", "countrylanguage", "where", "language", "=", "value"], "question": "Return the codes of countries that do not speak English and do not have Republics for governments.", "question_toks": ["Return", "the", "codes", "of", "countries", "that", "do", "not", "speak", "English", "and", "do", "not", "have", "Republics", "for", "governments", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 7, [0, [0, 19, false], null], "\"Republic\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, {"db_id": "epinions_1", "query": "SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) DESC LIMIT 1", "query_toks": ["SELECT", "T1.title", ",", "T1.i_id", "FROM", "item", "AS", "T1", "JOIN", "review", "AS", "T2", "ON", "T1.i_id", "=", "T2.i_id", "GROUP", "BY", "T2.i_id", "ORDER", "BY", "avg", "(", "T2.rating", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "title", ",", "t1", ".", "i_id", "from", "item", "as", "t1", "join", "review", "as", "t2", "on", "t1", ".", "i_id", "=", "t2", ".", "i_id", "group", "by", "t2", ".", "i_id", "order", "by", "avg", "(", "t2", ".", "rating", ")", "desc", "limit", "value"], "question": "Find the name and id of the item with the highest average rating.", "question_toks": ["Find", "the", "name", "and", "id", "of", "the", "item", "with", "the", "highest", "average", "rating", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [5, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "manufactory_1", "query": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')", "query_toks": ["SELECT", "name", "FROM", "manufacturers", "WHERE", "revenue", "<", "(", "SELECT", "min", "(", "revenue", ")", "FROM", "manufacturers", "WHERE", "headquarter", "=", "'Austin", "'", ")"], "query_toks_no_value": ["select", "name", "from", "manufacturers", "where", "revenue", "<", "(", "select", "min", "(", "revenue", ")", "from", "manufacturers", "where", "headquarter", "=", "value", ")"], "question": "What are the names of companies with revenue less than the lowest revenue of any manufacturer in Austin?", "question_toks": ["What", "are", "the", "names", "of", "companies", "with", "revenue", "less", "than", "the", "lowest", "revenue", "of", "any", "manufacturer", "in", "Austin", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Austin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "assets_maintenance", "query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name", "query_toks": ["SELECT", "T1.part_name", ",", "count", "(", "*", ")", "FROM", "Parts", "AS", "T1", "JOIN", "Asset_Parts", "AS", "T2", "ON", "T1.part_id", "=", "T2.part_id", "GROUP", "BY", "T1.part_name"], "query_toks_no_value": ["select", "t1", ".", "part_name", ",", "count", "(", "*", ")", "from", "parts", "as", "t1", "join", "asset_parts", "as", "t2", "on", "t1", ".", "part_id", "=", "t2", ".", "part_id", "group", "by", "t1", ".", "part_name"], "question": "How many assets can each parts be used in? List the part name and the number.", "question_toks": ["How", "many", "assets", "can", "each", "parts", "be", "used", "in", "?", "List", "the", "part", "name", "and", "the", "number", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 33, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "college_2", "query": "SELECT count(DISTINCT s_id) FROM advisor", "query_toks": ["SELECT", "count", "(", "DISTINCT", "s_id", ")", "FROM", "advisor"], "query_toks_no_value": ["select", "count", "(", "distinct", "s_id", ")", "from", "advisor"], "question": "Count the number of students who have advisors.", "question_toks": ["Count", "the", "number", "of", "students", "who", "have", "advisors", "."], "sql": {"from": {"table_units": [["table_unit", 8]], "conds": []}, "select": [false, [[3, [0, [0, 37, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "world_1", "query": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"", "query_toks": ["SELECT", "DISTINCT", "CountryCode", "FROM", "countrylanguage", "WHERE", "LANGUAGE", "!", "=", "``", "English", "''"], "query_toks_no_value": ["select", "distinct", "countrycode", "from", "countrylanguage", "where", "language", "!", "=", "value"], "question": "Give the country codes for countries in which people speak langauges that are not English.", "question_toks": ["Give", "the", "country", "codes", "for", "countries", "in", "which", "people", "speak", "langauges", "that", "are", "not", "English", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 23, false], null]]]], "where": [[false, 7, [0, [0, 24, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "sports_competition", "query": "SELECT DISTINCT Region FROM club ORDER BY Region ASC", "query_toks": ["SELECT", "DISTINCT", "Region", "FROM", "club", "ORDER", "BY", "Region", "ASC"], "query_toks_no_value": ["select", "distinct", "region", "from", "club", "order", "by", "region", "asc"], "question": "List the distinct region of clubs in ascending alphabetical order.", "question_toks": ["List", "the", "distinct", "region", "of", "clubs", "in", "ascending", "alphabetical", "order", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "club_1", "query": "SELECT clublocation FROM club WHERE clubname  =  \"Hopkins Student Enterprises\"", "query_toks": ["SELECT", "clublocation", "FROM", "club", "WHERE", "clubname", "=", "``", "Hopkins", "Student", "Enterprises", "''"], "query_toks_no_value": ["select", "clublocation", "from", "club", "where", "clubname", "=", "value"], "question": "Tell me the location of the club \"Hopkins Student Enterprises\".", "question_toks": ["Tell", "me", "the", "location", "of", "the", "club", "``", "Hopkins", "Student", "Enterprises", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Hopkins Student Enterprises\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "department_store", "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3", "query_toks": ["SELECT", "DISTINCT", "T1.customer_name", "FROM", "customers", "AS", "T1", "JOIN", "customer_orders", "AS", "T2", "ON", "T1.customer_id", "=", "T2.customer_id", "JOIN", "order_items", "AS", "T3", "ON", "T2.order_id", "=", "T3.order_id", "GROUP", "BY", "T1.customer_id", "HAVING", "COUNT", "(", "DISTINCT", "T3.product_id", ")", ">", "=", "3"], "query_toks_no_value": ["select", "distinct", "t1", ".", "customer_name", "from", "customers", "as", "t1", "join", "customer_orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "order_items", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "group", "by", "t1", ".", "customer_id", "having", "count", "(", "distinct", "t3", ".", "product_id", ")", ">", "=", "value"], "question": "Find the names of customers who have bought by at least three distinct products.", "question_toks": ["Find", "the", "names", "of", "customers", "who", "have", "bought", "by", "at", "least", "three", "distinct", "products", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 8], ["table_unit", 11]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 31, false], null], "and", [false, 2, [0, [0, 30, false], null], [0, 44, false], null]]}, "select": [true, [[0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [[false, 5, [0, [3, 45, true], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "college_1", "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211' AND T1.stu_lname LIKE 'S%'", "query_toks": ["SELECT", "T1.stu_fname", "FROM", "student", "AS", "T1", "JOIN", "enroll", "AS", "T2", "ON", "T1.stu_num", "=", "T2.stu_num", "JOIN", "CLASS", "AS", "T3", "ON", "T2.class_code", "=", "T3.class_code", "WHERE", "T3.crs_code", "=", "'ACCT-211", "'", "AND", "T1.stu_lname", "LIKE", "'S", "%", "'"], "query_toks_no_value": ["select", "t1", ".", "stu_fname", "from", "student", "as", "t1", "join", "enroll", "as", "t2", "on", "t1", ".", "stu_num", "=", "t2", ".", "stu_num", "join", "class", "as", "t3", "on", "t2", ".", "class_code", "=", "t3", ".", "class_code", "where", "t3", ".", "crs_code", "=", "value", "and", "t1", ".", "stu_lname", "like", "value"], "question": "What is the first name of the student whose last name starting with the letter S and is taking ACCT-211 class?", "question_toks": ["What", "is", "the", "first", "name", "of", "the", "student", "whose", "last", "name", "starting", "with", "the", "letter", "S", "and", "is", "taking", "ACCT-211", "class", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 4], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 32, false], null], [0, 25, false], null], "and", [false, 2, [0, [0, 24, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 34, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"ACCT-211\"", null], "and", [false, 9, [0, [0, 33, false], null], "\"S%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT document_type_code ,  count(*) FROM Documents GROUP BY document_type_code", "query_toks": ["SELECT", "document_type_code", ",", "count", "(", "*", ")", "FROM", "Documents", "GROUP", "BY", "document_type_code"], "query_toks_no_value": ["select", "document_type_code", ",", "count", "(", "*", ")", "from", "documents", "group", "by", "document_type_code"], "question": "How many documents are there of each type?", "question_toks": ["How", "many", "documents", "are", "there", "of", "each", "type", "?"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT section_name FROM Sections ORDER BY section_name DESC", "query_toks": ["SELECT", "section_name", "FROM", "Sections", "ORDER", "BY", "section_name", "DESC"], "query_toks_no_value": ["select", "section_name", "from", "sections", "order", "by", "section_name", "desc"], "question": "What are the names of the sections in reverse alphabetical order?", "question_toks": ["What", "are", "the", "names", "of", "the", "sections", "in", "reverse", "alphabetical", "order", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 25, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "assets_maintenance", "query": "SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id JOIN Ref_Company_Types AS T3 ON T1.company_type_code  =  T3.company_type_code ORDER BY T2.contract_end_date DESC LIMIT 1", "query_toks": ["SELECT", "T1.company_name", "FROM", "Third_Party_Companies", "AS", "T1", "JOIN", "Maintenance_Contracts", "AS", "T2", "ON", "T1.company_id", "=", "T2.maintenance_contract_company_id", "JOIN", "Ref_Company_Types", "AS", "T3", "ON", "T1.company_type_code", "=", "T3.company_type_code", "ORDER", "BY", "T2.contract_end_date", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "company_name", "from", "third_party_companies", "as", "t1", "join", "maintenance_contracts", "as", "t2", "on", "t1", ".", "company_id", "=", "t2", ".", "maintenance_contract_company_id", "join", "ref_company_types", "as", "t3", "on", "t1", ".", "company_type_code", "=", "t3", ".", "company_type_code", "order", "by", "t2", ".", "contract_end_date", "desc", "limit", "value"], "question": "What is the description of the type of the company who concluded its contracts most recently?", "question_toks": ["What", "is", "the", "description", "of", "the", "type", "of", "the", "company", "who", "concluded", "its", "contracts", "most", "recently", "?"], "sql": {"except": null, "from": {"conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]], "table_units": [["table_unit", 0], ["table_unit", 1]]}, "groupBy": [], "having": [], "intersect": null, "limit": 1, "orderBy": ["desc", [[0, [0, 9, false], null]]], "select": [false, [[0, [0, [0, 3, false], null]]]], "union": null, "where": []}}, {"db_id": "film_rank", "query": "SELECT Country FROM market ORDER BY Number_cities DESC", "query_toks": ["SELECT", "Country", "FROM", "market", "ORDER", "BY", "Number_cities", "DESC"], "query_toks_no_value": ["select", "country", "from", "market", "order", "by", "number_cities", "desc"], "question": "List all countries of markets in descending order of number of cities.", "question_toks": ["List", "all", "countries", "of", "markets", "in", "descending", "order", "of", "number", "of", "cities", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 8, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "student_transcripts_tracking", "query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Departments", "AS", "T1", "JOIN", "Degree_Programs", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id", "WHERE", "T1.department_name", "=", "'engineer", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "departments", "as", "t1", "join", "degree_programs", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id", "where", "t1", ".", "department_name", "=", "value"], "question": "How many degrees does the engineering department offer?", "question_toks": ["How", "many", "degrees", "does", "the", "engineering", "department", "offer", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 19, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"engineer\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "swimming", "query": "SELECT name FROM stadium WHERE id NOT IN (SELECT stadium_id FROM event)", "query_toks": ["SELECT", "name", "FROM", "stadium", "WHERE", "id", "NOT", "IN", "(", "SELECT", "stadium_id", "FROM", "event", ")"], "query_toks_no_value": ["select", "name", "from", "stadium", "where", "id", "not", "in", "(", "select", "stadium_id", "from", "event", ")"], "question": "Find the names of stadiums which have never had any event.", "question_toks": ["Find", "the", "names", "of", "stadiums", "which", "have", "never", "had", "any", "event", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[true, 8, [0, [0, 12, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 20, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "store_1", "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count(T1.id)  >  10;", "query_toks": ["SELECT", "T1.title", "FROM", "albums", "AS", "T1", "JOIN", "tracks", "AS", "T2", "ON", "T1.id", "=", "T2.album_id", "GROUP", "BY", "T1.id", "HAVING", "count", "(", "T1.id", ")", ">", "10", ";"], "query_toks_no_value": ["select", "t1", ".", "title", "from", "albums", "as", "t1", "join", "tracks", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "album_id", "group", "by", "t1", ".", "id", "having", "count", "(", "t1", ".", "id", ")", ">", "value"], "question": "What are the names of the albums that have more than 10 tracks?", "question_toks": ["What", "are", "the", "names", "of", "the", "albums", "that", "have", "more", "than", "10", "tracks", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 51, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [[false, 3, [0, [3, 5, false], null], 10.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "hr_1", "query": "SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id", "query_toks": ["SELECT", "T1.first_name", ",", "T2.department_name", "FROM", "employees", "AS", "T1", "JOIN", "departments", "AS", "T2", "ON", "T1.department_id", "=", "T2.department_id"], "query_toks_no_value": ["select", "t1", ".", "first_name", ",", "t2", ".", "department_name", "from", "employees", "as", "t1", "join", "departments", "as", "t2", "on", "t1", ".", "department_id", "=", "t2", ".", "department_id"], "question": "Display the first name and department name for each employee.", "question_toks": ["Display", "the", "first", "name", "and", "department", "name", "for", "each", "employee", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 24, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "store_1", "query": "SELECT email ,  phone FROM customers WHERE first_name = \"Astrid\" AND last_name = \"Gruber\";", "query_toks": ["SELECT", "email", ",", "phone", "FROM", "customers", "WHERE", "first_name", "=", "``", "Astrid", "''", "AND", "last_name", "=", "``", "Gruber", "''", ";"], "query_toks_no_value": ["select", "email", ",", "phone", "from", "customers", "where", "first_name", "=", "value", "and", "last_name", "=", "value"], "question": "What is the email and phone number of Astrid Gruber the customer?", "question_toks": ["What", "is", "the", "email", "and", "phone", "number", "of", "Astrid", "Gruber", "the", "customer", "?"], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 34, false], null]], [0, [0, [0, 32, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Astrid\"", null], "and", [false, 2, [0, [0, 25, false], null], "\"Gruber\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "gymnast", "query": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5", "query_toks": ["SELECT", "Name", "FROM", "People", "ORDER", "BY", "Age", "DESC", "LIMIT", "5"], "query_toks_no_value": ["select", "name", "from", "people", "order", "by", "age", "desc", "limit", "value"], "question": "What are the names of the five oldest people?", "question_toks": ["What", "are", "the", "names", "of", "the", "five", "oldest", "people", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": 5, "intersect": null, "union": null, "except": null}}, {"db_id": "employee_hire_evaluation", "query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "LOCATION", "FROM", "shop", "GROUP", "BY", "LOCATION"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "location", "from", "shop", "group", "by", "location"], "question": "Find the number of shops in each location.", "question_toks": ["Find", "the", "number", "of", "shops", "in", "each", "location", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "TV_Channel", "WHERE", "LANGUAGE", "=", "``", "English", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "tv_channel", "where", "language", "=", "value"], "question": "How many TV Channel using language English?", "question_toks": ["How", "many", "TV", "Channel", "using", "language", "English", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "customers_and_addresses", "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte'", "query_toks": ["SELECT", "customer_name", "FROM", "customers", "EXCEPT", "SELECT", "t1.customer_name", "FROM", "customers", "AS", "t1", "JOIN", "customer_orders", "AS", "t2", "ON", "t1.customer_id", "=", "t2.customer_id", "JOIN", "order_items", "AS", "t3", "ON", "t2.order_id", "=", "t3.order_id", "JOIN", "products", "AS", "t4", "ON", "t3.product_id", "=", "t4.product_id", "WHERE", "t4.product_details", "=", "'Latte", "'"], "query_toks_no_value": ["select", "customer_name", "from", "customers", "except", "select", "t1", ".", "customer_name", "from", "customers", "as", "t1", "join", "customer_orders", "as", "t2", "on", "t1", ".", "customer_id", "=", "t2", ".", "customer_id", "join", "order_items", "as", "t3", "on", "t2", ".", "order_id", "=", "t3", ".", "order_id", "join", "products", "as", "t4", "on", "t3", ".", "product_id", "=", "t4", ".", "product_id", "where", "t4", ".", "product_details", "=", "value"], "question": "Find the names of customers who never ordered product Latte.", "question_toks": ["Find", "the", "names", "of", "customers", "who", "never", "ordered", "product", "Latte", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2], ["table_unit", 5], ["table_unit", 6], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 26, false], null], "and", [false, 2, [0, [0, 25, false], null], [0, 30, false], null], "and", [false, 2, [0, [0, 31, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Latte\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}}, {"db_id": "student_1", "query": "SELECT count(*) FROM list", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "list"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "list"], "question": "How many students are there?", "question_toks": ["How", "many", "students", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "solvency_ii", "query": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2 ORDER BY T1.Product_Name", "query_toks": ["SELECT", "T1.Product_Name", "FROM", "Products", "AS", "T1", "JOIN", "Products_in_Events", "AS", "T2", "ON", "T1.Product_ID", "=", "T2.Product_ID", "GROUP", "BY", "T1.Product_Name", "HAVING", "COUNT", "(", "*", ")", ">", "=", "2", "ORDER", "BY", "T1.Product_Name"], "query_toks_no_value": ["select", "t1", ".", "product_name", "from", "products", "as", "t1", "join", "products_in_events", "as", "t2", "on", "t1", ".", "product_id", "=", "t2", ".", "product_id", "group", "by", "t1", ".", "product_name", "having", "count", "(", "*", ")", ">", "=", "value", "order", "by", "t1", ".", "product_name"], "question": "Show the names of products that are in at least two events in ascending alphabetical order of product name.", "question_toks": ["Show", "the", "names", "of", "products", "that", "are", "in", "at", "least", "two", "events", "in", "ascending", "alphabetical", "order", "of", "product", "name", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 8]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 25, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": ["asc", [[0, [0, 7, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "museum_visit", "query": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)", "query_toks": ["SELECT", "name", "FROM", "museum", "WHERE", "num_of_staff", ">", "(", "SELECT", "min", "(", "num_of_staff", ")", "FROM", "museum", "WHERE", "open_year", ">", "2010", ")"], "query_toks_no_value": ["select", "name", "from", "museum", "where", "num_of_staff", ">", "(", "select", "min", "(", "num_of_staff", ")", "from", "museum", "where", "open_year", ">", "value", ")"], "question": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.", "question_toks": ["find", "the", "names", "of", "museums", "which", "have", "more", "staff", "than", "the", "minimum", "staff", "number", "of", "all", "museums", "opened", "after", "2010", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 2010.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "student_1", "query": "SELECT DISTINCT firstname ,  lastname FROM list", "query_toks": ["SELECT", "DISTINCT", "firstname", ",", "lastname", "FROM", "list"], "query_toks_no_value": ["select", "distinct", "firstname", ",", "lastname", "from", "list"], "question": "Show each student's first name and last name.", "question_toks": ["Show", "each", "student", "'s", "first", "name", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "dorm_1", "query": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300", "query_toks": ["SELECT", "dorm_name", "FROM", "dorm", "WHERE", "student_capacity", ">", "300"], "query_toks_no_value": ["select", "dorm_name", "from", "dorm", "where", "student_capacity", ">", "value"], "question": "What are the names of all the dorms that can accomdate more than 300 students?", "question_toks": ["What", "are", "the", "names", "of", "all", "the", "dorms", "that", "can", "accomdate", "more", "than", "300", "students", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 300.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "employee_hire_evaluation", "query": "SELECT * FROM hiring", "query_toks": ["SELECT", "*", "FROM", "hiring"], "query_toks_no_value": ["select", "*", "from", "hiring"], "question": "Give me all the information about hiring.", "question_toks": ["Give", "me", "all", "the", "information", "about", "hiring", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Doc_Template_Mgt", "query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1", "query_toks": ["SELECT", "template_id", "FROM", "Documents", "GROUP", "BY", "template_id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "template_id", "from", "documents", "group", "by", "template_id", "having", "count", "(", "*", ")", ">", "value"], "question": "Show ids for all templates that are used by more than one document.", "question_toks": ["Show", "ids", "for", "all", "templates", "that", "are", "used", "by", "more", "than", "one", "document", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "music_1", "query": "SELECT f_id FROM files WHERE formats  =  \"mp4\" INTERSECT SELECT f_id FROM song WHERE resolution  <  1000", "query_toks": ["SELECT", "f_id", "FROM", "files", "WHERE", "formats", "=", "``", "mp4", "''", "INTERSECT", "SELECT", "f_id", "FROM", "song", "WHERE", "resolution", "<", "1000"], "query_toks_no_value": ["select", "f_id", "from", "files", "where", "formats", "=", "value", "intersect", "select", "f_id", "from", "song", "where", "resolution", "<", "value"], "question": "Find the id of songs that are available in mp4 format and have resolution lower than 1000.", "question_toks": ["Find", "the", "id", "of", "songs", "that", "are", "available", "in", "mp4", "format", "and", "have", "resolution", "lower", "than", "1000", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"mp4\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 4, [0, [0, 21, false], null], 1000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}}, {"db_id": "club_1", "query": "SELECT clublocation FROM club WHERE clubname  =  \"Hopkins Student Enterprises\"", "query_toks": ["SELECT", "clublocation", "FROM", "club", "WHERE", "clubname", "=", "``", "Hopkins", "Student", "Enterprises", "''"], "query_toks_no_value": ["select", "clublocation", "from", "club", "where", "clubname", "=", "value"], "question": "Tell me the location of the club \"Hopkins Student Enterprises\".", "question_toks": ["Tell", "me", "the", "location", "of", "the", "club", "``", "Hopkins", "Student", "Enterprises", "''", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Hopkins Student Enterprises\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Drama_Workshop_Groups", "query": "SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)", "query_toks": ["SELECT", "DISTINCT", "Product_Name", "FROM", "PRODUCTS", "WHERE", "Product_Price", ">", "(", "SELECT", "avg", "(", "Product_Price", ")", "FROM", "PRODUCTS", ")"], "query_toks_no_value": ["select", "distinct", "product_name", "from", "products", "where", "product_price", ">", "(", "select", "avg", "(", "product_price", ")", "from", "products", ")"], "question": "Show all the distinct product names with price higher than the average.", "question_toks": ["Show", "all", "the", "distinct", "product", "names", "with", "price", "higher", "than", "the", "average", "."], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [true, [[0, [0, [0, 13, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[5, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "hospital_1", "query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000", "query_toks": ["SELECT", "T1.name", "FROM", "physician", "AS", "T1", "JOIN", "trained_in", "AS", "T2", "ON", "T1.employeeid", "=", "T2.physician", "JOIN", "procedures", "AS", "T3", "ON", "T3.code", "=", "T2.treatment", "WHERE", "T3.cost", ">", "5000"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "physician", "as", "t1", "join", "trained_in", "as", "t2", "on", "t1", ".", "employeeid", "=", "t2", ".", "physician", "join", "procedures", "as", "t3", "on", "t3", ".", "code", "=", "t2", ".", "treatment", "where", "t3", ".", "cost", ">", "value"], "question": "Find the physicians who are trained in a procedure that costs more than 5000.", "question_toks": ["Find", "the", "physicians", "who", "are", "trained", "in", "a", "procedure", "that", "costs", "more", "than", "5000", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 5000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "cre_Docs_and_Epenses", "query": "SELECT STATEMENT_ID ,  statement_details FROM Statements", "query_toks": ["SELECT", "STATEMENT_ID", ",", "statement_details", "FROM", "Statements"], "query_toks_no_value": ["select", "statement_id", ",", "statement_details", "from", "statements"], "question": "List all statement ids and statement details.", "question_toks": ["List", "all", "statement", "ids", "and", "statement", "details", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]], [0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "driving_school", "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";", "query_toks": ["SELECT", "T1.zip_postcode", "FROM", "Addresses", "AS", "T1", "JOIN", "Staff", "AS", "T2", "ON", "T1.address_id", "=", "T2.staff_address_id", "WHERE", "T2.first_name", "=", "``", "Janessa", "''", "AND", "T2.last_name", "=", "``", "Sawayn", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "zip_postcode", "from", "addresses", "as", "t1", "join", "staff", "as", "t2", "on", "t1", ".", "address_id", "=", "t2", ".", "staff_address_id", "where", "t2", ".", "first_name", "=", "value", "and", "t2", ".", "last_name", "=", "value"], "question": "What is the zip code of staff with first name as Janessa and last name as Sawayn lived?", "question_toks": ["What", "is", "the", "zip", "code", "of", "staff", "with", "first", "name", "as", "Janessa", "and", "last", "name", "as", "Sawayn", "lived", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Janessa\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"Sawayn\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "tvshow", "query": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'", "query_toks": ["SELECT", "Pixel_aspect_ratio_PAR", ",", "country", "FROM", "tv_channel", "WHERE", "LANGUAGE", "!", "=", "'English", "'"], "query_toks_no_value": ["select", "pixel_aspect_ratio_par", ",", "country", "from", "tv_channel", "where", "language", "!", "=", "value"], "question": "find the pixel aspect ratio and nation of the tv channels that do not use English.", "question_toks": ["find", "the", "pixel", "aspect", "ratio", "and", "nation", "of", "the", "tv", "channels", "that", "do", "not", "use", "English", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 7, [0, [0, 4, false], null], "\"English\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "e_learning", "query": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2", "query_toks": ["SELECT", "T1.student_id", ",", "T2.middle_name", "FROM", "Student_Course_Enrolment", "AS", "T1", "JOIN", "Students", "AS", "T2", "ON", "T1.student_id", "=", "T2.student_id", "GROUP", "BY", "T1.student_id", "HAVING", "COUNT", "(", "*", ")", "<", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "student_id", ",", "t2", ".", "middle_name", "from", "student_course_enrolment", "as", "t1", "join", "students", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "student_id", "group", "by", "t1", ".", "student_id", "having", "count", "(", "*", ")", "<", "=", "value"], "question": "Find the student ID and middle name for all the students with at most two enrollments.", "question_toks": ["Find", "the", "student", "ID", "and", "middle", "name", "for", "all", "the", "students", "with", "at", "most", "two", "enrollments", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 26, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 26, false], null]], [0, [0, [0, 16, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [[false, 6, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "customers_campaigns_ecommerce", "query": "SELECT DISTINCT premises_type FROM premises", "query_toks": ["SELECT", "DISTINCT", "premises_type", "FROM", "premises"], "query_toks_no_value": ["select", "distinct", "premises_type", "from", "premises"], "question": "What are all the distinct premise types?", "question_toks": ["What", "are", "all", "the", "distinct", "premise", "types", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "wta_1", "query": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'", "query_toks": ["SELECT", "first_name", ",", "birth_date", "FROM", "players", "WHERE", "country_code", "=", "'USA", "'"], "query_toks_no_value": ["select", "first_name", ",", "birth_date", "from", "players", "where", "country_code", "=", "value"], "question": "What are the first names and birth dates of players from the USA?", "question_toks": ["What", "are", "the", "first", "names", "and", "birth", "dates", "of", "players", "from", "the", "USA", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "customers_and_addresses", "query": "SELECT count(*) FROM customers", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "customers"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "customers"], "question": "How many customers are there?", "question_toks": ["How", "many", "customers", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "college_1", "query": "SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.dept_name", ",", "T2.dept_address", "FROM", "student", "AS", "T1", "JOIN", "department", "AS", "T2", "ON", "T1.dept_code", "=", "T2.dept_code", "GROUP", "BY", "T1.dept_code", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "dept_name", ",", "t2", ".", "dept_address", "from", "student", "as", "t1", "join", "department", "as", "t2", "on", "t1", ".", "dept_code", "=", "t2", ".", "dept_code", "group", "by", "t1", ".", "dept_code", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name and address of the department with the most students?", "question_toks": ["What", "is", "the", "name", "and", "address", "of", "the", "department", "with", "the", "most", "students", "?"], "sql": {"from": {"table_units": [["table_unit", 6], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 41, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 41, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}, {"db_id": "customers_and_addresses", "query": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%Alex%\"", "query_toks": ["SELECT", "customer_name", "FROM", "customers", "WHERE", "customer_name", "LIKE", "``", "%", "Alex", "%", "''"], "query_toks_no_value": ["select", "customer_name", "from", "customers", "where", "customer_name", "like", "value"], "question": "Find the name of all customers whose name contains \"Alex\".", "question_toks": ["Find", "the", "name", "of", "all", "customers", "whose", "name", "contains", "``", "Alex", "''", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 9, [0, [0, 12, false], null], "\"%Alex%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, {"db_id": "city_record", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id ORDER BY T2.Feb DESC LIMIT 1", "query_toks": ["SELECT", "T1.city", "FROM", "city", "AS", "T1", "JOIN", "temperature", "AS", "T2", "ON", "T1.city_id", "=", "T2.city_id", "ORDER", "BY", "T2.Feb", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "city", "as", "t1", "join", "temperature", "as", "t2", "on", "t1", ".", "city_id", "=", "t2", ".", "city_id", "order", "by", "t2", ".", "feb", "desc", "limit", "value"], "question": "In February, which city marks the highest temperature?", "question_toks": ["In", "February", ",", "which", "city", "marks", "the", "highest", "temperature", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 15, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}}]